name: Docker Builds

on:
    workflow_run:
        workflows: ["Prepare new release"]
        types:
            - completed
    repository_dispatch:
        types: [trigger-docker-builds]

env:
    REGISTRY: ghcr.io
    OWNER: ${{ github.repository_owner }}

jobs:
    setup-buildx:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  driver-opts: network=host

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ env.OWNER }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Get version from package.json
              id: get-version
              run: |
                  VERSION=$(jq -r '.version' apps/wizarr-frontend/package.json)
                  echo "version=${VERSION}" >> $GITHUB_OUTPUT
                  echo "Extracted version: ${VERSION}"

    build-frontend:
        needs: setup-buildx
        runs-on: ubuntu-latest
        env:
            image: wizarr-frontend
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Determine build cache output
              id: cache-target
              run: |
                  if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                    echo "cache-to=type=local,dest=/tmp/discard,ignore-error=true" >> $GITHUB_OUTPUT
                  else
                    echo "cache-to=type=registry,mode=max,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-build-cache:${{ env.image }}" >> $GITHUB_OUTPUT
                  fi

            - name: Build and push frontend image
              working-directory: apps/wizarr-frontend
              run: |
                  docker buildx build \
                    --platform linux/amd64,linux/arm64 \
                    --cache-from type=registry,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-build-cache:${{ env.image }} \
                    ${{ steps.cache-target.outputs.cache-to }} \
                    -t ${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-frontend:latest \
                    -t ${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-frontend:${{ needs.setup-buildx.outputs.version }} \
                    --push \
                    .

    build-backend:
        needs: setup-buildx
        runs-on: ubuntu-latest
        env:
            image: wizarr-backend
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Determine build cache output
              id: cache-target
              run: |
                  if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                    echo "cache-to=type=local,dest=/tmp/discard,ignore-error=true" >> $GITHUB_OUTPUT
                  else
                    echo "cache-to=type=registry,mode=max,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-build-cache:${{ env.image }}" >> $GITHUB_OUTPUT
                  fi

            - name: Build and push backend image
              working-directory: apps/wizarr-backend
              run: |
                  docker buildx build \
                    --platform linux/amd64,linux/arm64 \
                    --cache-from type=registry,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-build-cache:${{ env.image }} \
                    ${{ steps.cache-target.outputs.cache-to }} \
                    -t ${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-backend:latest \
                    -t ${{ env.REGISTRY }}/${{ env.OWNER }}/wizarr-backend:${{ needs.setup-buildx.outputs.version }} \
                    --push \
                    .
