#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/wizarrrrr/wizarr/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: wizarr

services:
    wizarr-server:
        container_name: wizarr_server
        image: ghcr.io/wizarrrrr/wizarr:${WIZARR_IMAGE_VERSION:-release}
        volumes:
            # Do not edit the next line. If you want to change the storage location on your system, edit the value of STORAGE_DIR in the .env file
            - ${STORAGE_DIR}:/usr/wizarr/data/storage
            - ${DB_DIR}:/usr/wizarr/data/database
            - /etc/localtime:/etc/localtime:ro
        env_file:
            - .env
        ports:
            - "5690:5690"
        depends_on:
            - redis
            - database
        restart: always
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:5690/api/health"]
            interval: 30s
            timeout: 10s
            retries: 5

    redis:
        container_name: wizarr_redis
        image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
        healthcheck:
            test: redis-cli ping || exit 1
        restart: always

    database:
        container_name: wizarr_postgres
        image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_DB: ${DB_DIR}
            POSTGRES_INITDB_ARGS: "--data-checksums"
        volumes:
            # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DIR in the .env file
            - ${DB_DIR}:/var/lib/postgresql/data
        healthcheck:
            test: >-
                pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
                Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
                --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
                echo "checksum failure count is $$Chksum";
                [ "$$Chksum" = '0' ] || exit 1
            interval: 5m
            start_interval: 30s
            start_period: 5m
        command: >-
            postgres
            -c shared_preload_libraries=vectors.so
            -c 'search_path="$$user", public, vectors'
            -c logging_collector=on
            -c max_wal_size=2GB
            -c shared_buffers=512MB
            -c wal_compression=on
        restart: always
